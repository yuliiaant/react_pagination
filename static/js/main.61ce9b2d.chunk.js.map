{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","total","itemsPerPage","currentPage","onPageChange","numberOfPages","Math","ceil","pages","Array","fill","map","_","i","isPrevAreaDisabled","isNextAreaDisabled","className","cn","disabled","href","onClick","previousPage","page","active","nextPage","showItemsPerPage","DEFAULT_PER_PAGE","App","useState","setItemsPerPage","setCurrentPage","start","end","itemsForPage","from","to","numbers","n","push","getNumbers","id","value","onChange","event","Number","target","number","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"oNAUaA,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,aACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAgBC,KAAKC,KAAKN,EAAQC,GAClCM,EAAQC,MAAMJ,GAAeK,KAAK,GAAGC,KAAI,SAACC,EAAGC,GAAJ,OAAUA,EAAI,KACvDC,EAAqC,IAAhBX,EACrBY,EAAqBZ,IAAgBE,EAY3C,OACE,qBAAIW,UAAU,aAAd,UACE,oBAAIA,UAAWC,IAAG,YAAa,CAC7BC,SAAUJ,IADZ,SAIE,mBACE,UAAQ,WACRE,UAAU,YACVG,KAAK,QACL,gBAAeL,EACfM,QAAS,kBAhBUC,EAgBclB,EAAc,EAf7B,IAAhBA,GACFC,EAAaiB,GAFK,IAACA,GAWrB,oBAUDb,EAAMG,KAAI,SAAAW,GAAI,OACb,oBAEEN,UAAWC,IAAG,YAAa,CAAEM,OAAQpB,IAAgBmB,IAFvD,SAIE,mBACE,UAAQ,WACRN,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,kBAAOhB,EAAakB,IAJ/B,SAMGA,KATEA,MAaT,oBAAIN,UAAWC,IAAG,YAAa,CAC7BC,SAAUH,IADZ,SAIE,mBACE,UAAQ,WACRC,UAAU,YACVG,KAAK,QACL,gBAAeJ,EACfK,QAAS,kBAlDUI,EAkDcrB,EAAc,EAjD7CA,IAAgBE,GAClBD,EAAaoB,GAFK,IAACA,GA6CrB,wBC5DFC,EAAmB,CAAC,EAAG,EAAG,GAAI,GAC9BC,EAAmBD,EAAiB,GAE7BE,EAAgB,WAC3B,MAAwCC,mBAASF,GAAjD,mBAAOxB,EAAP,KAAqB2B,EAArB,KACA,EAAsCD,mBAAS,GAA/C,mBAAOzB,EAAP,KAAoB2B,EAApB,KAOMC,EAAQ5B,EAAcD,EAAeA,EAAe,EACpD8B,EAAM7B,EAAcD,GAdR,GAedC,EAAcD,EAfA,GAiBZ+B,ECtBD,SAAoBC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,EDecG,CAAWR,EAAOC,GAEvC,OACE,sBAAKhB,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWb,EADX,mBACiC4B,EADjC,cAC4CC,EAD5C,eAvBc,GAuBd,OAIA,sBAAKhB,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,wBACE,UAAQ,kBACRwB,GAAG,kBACHxB,UAAU,eACVyB,MAAOvC,EACPwC,SA1BkB,SAACC,GAC3Bd,EAAgBe,OAAOD,EAAME,OAAOJ,QACpCX,EAAe,IAmBT,SAOGL,EAAiBd,KAAI,SAAAmC,GAAM,OAC1B,wBAAQL,MAAOK,EAAf,SACGA,GADyBA,UAOlC,uBAAOC,QAAQ,kBAAkB/B,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEf,MAlDY,GAmDZC,aAAcA,EACdC,YAAaA,EACbC,aAAc,SAACkB,GAAD,OAAUQ,EAAeR,MAEzC,6BACGW,EAAatB,KAAI,SAAAqC,GAAI,OACpB,oBAAI,UAAQ,OAAZ,wBACWA,IADaA,YE3DlCC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.61ce9b2d.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\n\ntype Props = {\n  total: number;\n  itemsPerPage: number;\n  currentPage: number;\n  onPageChange: (currentPage: number) => void;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  itemsPerPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const numberOfPages = Math.ceil(total / itemsPerPage);\n  const pages = Array(numberOfPages).fill(0).map((_, i) => i + 1);\n  const isPrevAreaDisabled = currentPage === 1;\n  const isNextAreaDisabled = currentPage === numberOfPages;\n\n  const handleClickToNext = (nextPage: number) => {\n    return (currentPage !== numberOfPages\n      && (onPageChange(nextPage)));\n  };\n\n  const handleClickToPrev = (previousPage: number) => {\n    return (currentPage !== 1\n      && (onPageChange(previousPage)));\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li className={cn('page-item', {\n        disabled: isPrevAreaDisabled,\n      })}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={isPrevAreaDisabled}\n          onClick={() => handleClickToPrev(currentPage - 1)}\n        >\n          «\n        </a>\n      </li>\n      {pages.map(page => (\n        <li\n          key={page}\n          className={cn('page-item', { active: currentPage === page })}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${page}`}\n            onClick={() => (onPageChange(page))}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n      <li className={cn('page-item', {\n        disabled: isNextAreaDisabled,\n      })}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={isNextAreaDisabled}\n          onClick={() => handleClickToNext(currentPage + 1)}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\nconst TOTAL_ITEMS = 42;\nconst showItemsPerPage = [3, 5, 10, 2];\nconst DEFAULT_PER_PAGE = showItemsPerPage[1];\n\nexport const App: React.FC = () => {\n  const [itemsPerPage, setItemsPerPage] = useState(DEFAULT_PER_PAGE);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const handlePerPageChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setItemsPerPage(Number(event.target.value));\n    setCurrentPage(1);\n  };\n\n  const start = currentPage * itemsPerPage - itemsPerPage + 1;\n  const end = currentPage * itemsPerPage <= TOTAL_ITEMS\n    ? currentPage * itemsPerPage\n    : TOTAL_ITEMS;\n  const itemsForPage = getNumbers(start, end);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${start} - ${end} of ${TOTAL_ITEMS})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={itemsPerPage}\n            onChange={handlePerPageChange}\n          >\n            {showItemsPerPage.map(number => (\n              <option value={number} key={number}>\n                {number}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={TOTAL_ITEMS}\n        itemsPerPage={itemsPerPage}\n        currentPage={currentPage}\n        onPageChange={(page) => setCurrentPage(page)}\n      />\n      <ul>\n        {itemsForPage.map(item => (\n          <li data-cy=\"item\" key={item}>\n            {`Item ${item}`}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}